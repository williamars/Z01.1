diff --git a/Projetos/G-Assembler/Assembler/.idea/.gitignore b/Projetos/G-Assembler/Assembler/.idea/.gitignore
deleted file mode 100644
index 26d3352..0000000
--- a/Projetos/G-Assembler/Assembler/.idea/.gitignore
+++ /dev/null
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
diff --git a/Projetos/G-Assembler/Assembler/AssemblerZ01.iml b/Projetos/G-Assembler/Assembler/AssemblerZ01.iml
index 2805f47..92a1345 100644
--- a/Projetos/G-Assembler/Assembler/AssemblerZ01.iml
+++ b/Projetos/G-Assembler/Assembler/AssemblerZ01.iml
@@ -12,7 +12,6 @@
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" scope="TEST" name="Maven: junit:junit:4.13" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: junit:junit:4.13" level="project" />
     <orderEntry type="library" scope="TEST" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
   </component>
 </module>
\ No newline at end of file
diff --git a/Projetos/G-Assembler/Assembler/src/main/java/assembler/Assemble.java b/Projetos/G-Assembler/Assembler/src/main/java/assembler/Assemble.java
index ff77775..a8dfea9 100644
--- a/Projetos/G-Assembler/Assembler/src/main/java/assembler/Assemble.java
+++ b/Projetos/G-Assembler/Assembler/src/main/java/assembler/Assemble.java
@@ -61,8 +61,9 @@ public class Assemble {
                 if (!table.contains(label)){
                     table.addEntry(label,romAddress);
                 }
+            } else {
+                romAddress++;
             }
-            romAddress++;
         }
         parser.close();
 
@@ -111,13 +112,19 @@ public class Assemble {
          * seguindo o instruction set
          */
         while (parser.advance()){
-            switch (parser.commandType(parser.command())){
+            switch (parser.commandType(parser.command())) {
                 /* TODO: implementar */
                 case C_COMMAND:
                     instruction = "10" + code.comp(parser.instruction(parser.command())) + code.dest(parser.instruction(parser.command())) + code.jump(parser.instruction(parser.command()));
-                break;
-            case A_COMMAND:
-                    instruction = "0" + code.toBinary(parser.symbol(parser.command()));
+                    break;
+                case A_COMMAND:
+                    if (parser.symbol(parser.command()) ?????numero){
+                    instruction = "00" + code.toBinary(parser.symbol(parser.command()));
+                } else
+                {
+
+
+                }
                 break;
             default:
                 continue;
